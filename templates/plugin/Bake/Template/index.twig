<template>
  <div class="column-responsive column-80">
   {% set vueVar = "{{ flash['message'] }}" %}
   <div onclick="this.classList.add('hidden')" :class="[(flash['element'] === undefined) ? 'hidden' : '','message', (flash['element'] === 'flash-success' ? 'success' : 'error')]">{{ vueVar }}</div>
   <div class="{{ pluralVar }} index content">
       <h3>{{ pluralHumanName }}</h3>
       <InertiaLink href="/{{ pluralVar }}/add" class="button shadow radius right small">Add {{ singularHumanName }}</InertiaLink>
       {% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
       <div class="table-responsive">
           <table>
               <thead>
               <tr>
                   {% for field in fields %}
                       <th scope="col">
                        <InertiaLink href="/{{ pluralVar }}/index" :class="defaultClass.{{ field }}" :data="{ sort: '{{ field }}', direction: changeDirection }">{{ field|capitalize }}</InertiaLink>
                       </th>
                   {% endfor %}
                   <th class="actions">Actions</th>
               </tr>
               </thead>
               <tbody>
                <tr v-for="{{ singularVar }} in {{ pluralVar }}">
                    {% for field in fields %}

                        {% set isKey = false %}

                        {% if associations.BelongsTo is defined %}
                            {% for alias, details in associations.BelongsTo %}
                                {% if field == details.foreignKey %}
                                    {% set isKey = true %}
                                    {% set vueVarParent = singularVar ~ "." ~  details.property %}
                                    {% set vueVar = "{{" ~ singularVar ~ "." ~ details.property ~ "." ~ details.displayField  ~ "}}" %}
                                    {% set vueVarIndex = singularVar ~ "." ~ details.property ~ "." ~ details.primaryKey[0] %}
                                    <td>
                                        <span v-if="{{ vueVarParent }}">
                                            <InertiaLink class=""  :href="'/{{ details.controller|lower }}/view/' + {{ vueVarIndex }}">{{ vueVar }}</InertiaLink>
                                        </span>
                                    </td>
                                {% endif %}
                            {% endfor %}
                        {% endif %}

                        {% if isKey is not same as(true) %}
                            {% set columnData = Bake.columnData(field, schema) %}
                            {% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger', 'timestampfractional'] %}
                                <td>
                                    {#  todo: need trucnate #}
                                    {% set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{ vueVar }}
                                </td>
                            {% elseif columnData.type == 'timestampfractional' %}
                                <td>
                                    {% set vueVar = "{{ formatDate(" ~ singularVar ~ "." ~ field ~ ") }}" %}
                                    {{ vueVar }}
                                </td>
                            {% elseif columnData.null %}
                                {#  todo: need check vueVar === null #}
                                <td>
                                    {% set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{ vueVar }}
                                </td>
                            {% else %}
                                <td>
                                    {% set vueVar = "{{" ~ singularVar ~ "." ~ field ~ "}}" %}
                                    {{ vueVar }}
                                </td>
                            {% endif %}
                        {% endif %}


                    {% endfor %}
                    <td class="actions">
                        <InertiaLink :href="'/{{ pluralVar }}/view/' + {{ singularVar }}.id">View</InertiaLink>
                        <InertiaLink :href="'/{{ pluralVar }}/edit/' + {{ singularVar }}.id">Edit</InertiaLink>
                        <InertiaLink :data="{ _csrfToken:token }"  method="post" :href="'/{{ pluralVar }}/delete/' + {{ singularVar }}.id">Delete</InertiaLink>
                    </td>
                </tr>
               </tbody>
           </table>
       </div>
       <span v-if="links.length > 1">
           <div class="paginator">
               <ul class="pagination">
                   <template v-for="(link, key) in links">
                       <li>
                           {% set vueLabel = "{{ link.label }}" %}
                           <InertiaLink :key="key" class="" :href="link.url">{{ vueLabel }}</InertiaLink>
                       </li>
                   </template>
               </ul>
           </div>
       </span>
   </div>
  </div>
</template>

<script>
 import Layout from '@/Components/Layout'
 import moment from 'moment'
 export default {
  props: {
   {{ pluralVar }}: Array,
   token: String,
   flash: Object|Array,
   sort: String,
   direction: String,
   links: Array,
  },
  data() {
   return {
    page: 1,
    currentRoute: '/{{ pluralVar }}/index',
    defaultClass: {
     id: '',
     name: '',
    }
   };
  },
  computed: {
   changeDirection(p) {
    if (this.direction === 'desc') {
     return 'asc';
    } else {
     return 'desc';
    }
   }
  },
  methods: {
   formatDate(date) {
    return moment(date).format("YYYY-MM-DD")
   }
  },
  mounted() {
  },
  layout: Layout
 }
</script>
